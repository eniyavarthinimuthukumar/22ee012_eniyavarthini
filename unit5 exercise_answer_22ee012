Code cell <undefined>
# %% [code]
import pandas as pd
import numpy as np

Text cell <undefined>
# %% [markdown]
### Write a code to generate the following series
![image.png](attachment:image.png)

Code cell <undefined>
# %% [code]

import pandas as pd
import numpy as np

# Generate the series
data = pd.Series(np.arange(10, 31, 2))

# Display the series
print(data)


Text cell <undefined>
# %% [markdown]
### Write a Code to convert a 1-D array to a 3-D array
![image.png](attachment:image.png)

Code cell <undefined>
# %% [code]

import numpy as np

# Given 1-D array
one_d_array = np.array([ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24])

# Reshape to 3-D array
three_d_array = one_d_array.reshape((3, 4, 2))

# Display the 3-D array
print(three_d_array)


Text cell <undefined>
# %% [markdown]
### Combine the given two arrays as below

**Given Array**

![image-2.png](attachment:image-2.png)

**Resultant Array**

![image.png](attachment:image.png)

Code cell <undefined>
# %% [code]
import numpy as np

# Given arrays
array1 = np.array([[10, 20, 30], [40, 50, 60]])
array2 = np.array([[70, 80, 90], [100, 110, 120]])

# Combine the arrays along the columns (axis=1)
resultant_array = np.concatenate((array1, array2), axis=1)

# Display the resultant array
print(resultant_array)



Text cell <undefined>
# %% [markdown]
### Generate of given count of equally spaced 10 numbers within a range of 0 to 100

![image.png](attachment:image.png)

Code cell <undefined>
# %% [code]


Text cell <undefined>
# %% [markdown]
### Generate the matrix of with 5 rows and 5 columns and assign to one value "999"

Code cell <undefined>
# %% [code]


Text cell <undefined>
# %% [markdown]
### Generate the series as below

![image.png](attachment:image.png)


Code cell <undefined>
# %% [code]
Jan = pd.Series([26,48,65,64,88],index=["Drygrapes","Cashew","Walnut","Fig","Dates"],name="Jan Month Sales of Dry Fruits")
Feb = pd.Series([50,38,62,78,93],index=["Drygrapes","Cashew","Walnut","Fig","Dates"],name="Feb Month Sales of Dry Fruits")
print(Jan)
print(Feb)

Text cell <undefined>
# %% [markdown]
### Find the sales difference of two months Jan and Feb and generate the output as below

![image.png](attachment:image.png)

Code cell <undefined>
# %% [code]
import pandas as pd


print("Columns of the DataFrame:")
print(student_exercise.columns)



Text cell <undefined>
# %% [markdown]
### Display the Dryfruits that have an increased its sales in the Feb month compared to Jan month

![image.png](attachment:image.png)

Code cell <undefined>
# %% [code]
print("Descriptive statistics of numeric columns:")
print(student_exercise.describe())



Text cell <undefined>
# %% [markdown]
## Calculate the percentage of increase in sales 

**Formula = (Sales in Jan month - Sales in Feb Month)/Sales of Feb month * 100**

And Display the result as below

![image.png](attachment:image.png)

Code cell <undefined>
# %% [code]
print("Top 5 students based on marks:")
print(student_exercise.nlargest(5, 'Mark'))



Text cell <undefined>
# %% [markdown]
### Use the above generate series and generate the below dataframe.

![image.png](attachment:image.png)


Code cell <undefined>
# %% [code]
print("Top 5 students based on marks:")
print(student_exercise.nlargest(5, 'Mark'))




Text cell <undefined>
# %% [markdown]
### Rename the column name of Percentage of sales as below.

![image.png](attachment:image.png)

Code cell <undefined>
# %% [code]
print("Rows where 'Mark' is greater than 60:")
print(student_exercise[student_exercise['Mark'] > 60])




Text cell <undefined>
# %% [markdown]
### Replace the NAN values with '0' as below

![image.png](attachment:image.png)

Code cell <undefined>
# %% [code]
student_exercise['Mark'].fillna(0, inplace=True)


Text cell <undefined>
# %% [markdown]
### Round of the profit percentage to two decimal values as below.

![image.png](attachment:image.png)

Code cell <undefined>
# %% [code]
print("Rows where 'class' is Three and 'mark' is more than 50:")
print(student_exercise[(student_exercise['class'] == 'Three') & (student_exercise['mark'] > 50)])



Text cell <undefined>
# %% [markdown]
## Generate the Dataframe as below which describes about the step count of 5 persons.

![image.png](attachment:image.png)

Code cell <undefined>
# %% [code]
print("Total number of missing values in each column:")
print(student_exercise.isnull().sum())



Text cell <undefined>
# %% [markdown]
## Add the column "Total Step count" as below which consist of total step count for 7 days and if the sum value is float convert that to integer

![image.png](attachment:image.png)

Code cell <undefined>
# %% [code]
random_sample = student_exercise.sample(n=7)
print("Randomly selected 7 rows:")
print(random_sample)

